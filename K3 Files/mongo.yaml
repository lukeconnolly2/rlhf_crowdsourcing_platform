apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      initContainers:
        - name: fix-lock
          image: busybox
          command: ["sh", "-c", "rm -f /data/db/mongod.lock"]
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      containers:
      - name: mongodb
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom: 
            secretKeyRef:
              name: secrets
              key: MONGO_USER 
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: secrets
              key: MONGO_PASS 
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        lifecycle:
          preStop:
            exec:
              command: ["mongod", "--shutdown", "--dbpath", "/data/db"]
        readinessProbe:
          exec:
            command: ["mongosh", "--eval", "db.adminCommand('ping')"]
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["mongosh", "--eval", "db.adminCommand('ping')"]
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
---

apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017


